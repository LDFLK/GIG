consumes:
- application/json
definitions:
  Attribute:
    properties:
      name:
        type: string
        x-go-name: Name
      values:
        items:
          $ref: '#/definitions/Value'
        type: array
        x-go-name: Values
    type: object
    x-go-package: GIG-SDK/models
  ErrorResponse:
    properties:
      error:
        type: string
        x-go-name: ErrorMessage
    type: object
    x-go-package: GIG/app/controllers
  Link:
    properties:
      dates:
        items:
          format: date-time
          type: string
        type: array
        x-go-name: Dates
      title:
        type: string
        x-go-name: Title
    type: object
    x-go-package: GIG-SDK/models
  SearchResult:
    properties:
      attributes:
        additionalProperties:
          $ref: '#/definitions/Attribute'
        type: object
        x-go-name: Attributes
      categories:
        items:
          type: string
        type: array
        x-go-name: Categories
      created_at:
        format: date-time
        type: string
        x-go-name: CreatedAt
      image_url:
        type: string
        x-go-name: ImageURL
      links:
        items:
          $ref: '#/definitions/Link'
        type: array
        x-go-name: Links
      snippet:
        type: string
        x-go-name: Snippet
      source:
        type: string
        x-go-name: Source
      source_date:
        format: date-time
        type: string
        x-go-name: SourceDate
      title:
        type: string
        x-go-name: Title
      updated_at:
        format: date-time
        type: string
        x-go-name: UpdatedAt
    type: object
    x-go-package: GIG-SDK/models
  Upload:
    properties:
      source:
        type: string
        x-go-name: Source
      title:
        type: string
        x-go-name: Title
    type: object
    x-go-package: GIG-SDK/models
  Value:
    properties:
      date:
        format: date-time
        type: string
        x-go-name: Date
      source:
        type: string
        x-go-name: Source
      updated_at:
        format: date-time
        type: string
        x-go-name: UpdatedAt
      value_string:
        type: string
        x-go-name: ValueString
      value_type:
        type: string
        x-go-name: ValueType
    type: object
    x-go-package: GIG-SDK/models
host: api.gigdemo.opensource.lk:9000/api/
info:
  contact:
    email: umayangag@opensource.lk
  description: General Information Graph API Documentation
  termsOfService: there are no TOS at this moment, use at your own risk we take no
    responsibility
  title: General Information Graph - API
  version: 1.0.0
paths:
  /add:
    post:
      description: This API allows to create/ modify a new/ existing entity
      operationId: add
      parameters:
      - description: entity object
        in: body
        name: entity
        required: true
        schema:
          $ref: '#/definitions/SearchResult'
      produces:
      - application/json
      responses:
        "200":
          description: entity created/ modified
          schema:
            $ref: '#/definitions/SearchResult'
        "403":
          description: input validation error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: server error
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Create Entity
      tags:
      - Entity
  /add-batch:
    post:
      description: This API allows to create/ modify a new/ set of entities
      operationId: add-batch
      parameters:
      - description: entity object array
        in: body
        name: entity
        required: true
        schema:
          items:
            $ref: '#/definitions/SearchResult'
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: entity created/ modified
          schema:
            $ref: '#/definitions/SearchResult'
        "403":
          description: input validation error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: server error
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Create a Set of Entities
      tags:
      - Entity
  /get/{title}:
    get:
      description: This API allows key word searching to retrieve list of entities
      operationId: show
      parameters:
      - description: title of the entity
        in: path
        name: title
        required: true
        type: string
      - description: date to search the title for eg. 2006-01-02
        in: query
        name: date
        type: date
      - collectionFormat: csv
        description: list of attributes to filter/ return all attributes if not provided
        in: query
        items:
          type: string
        name: attributes
        type: array
      - description: return only the default image.
        in: query
        name: imageOnly
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: search result
          schema:
            items:
              $ref: '#/definitions/SearchResult'
            type: array
        "202":
          description: return default image path
          schema:
            type: string
        "400":
          description: input parameter validation error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: server error
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Return Entity
      tags:
      - Entity
  /images/{title}/{filename}:
    get:
      description: This API allows to retrieve a file from server
      operationId: retrieve
      parameters:
      - description: entity title
        in: path
        name: title
        required: true
        type: string
      - description: filename
        in: path
        name: filename
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: file
          schema:
            type: file
        "400":
          description: input parameter validation error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: server error
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Retrieve a file from the server
      tags:
      - File
  /links/{title}:
    get:
      description: |-
        This API allows retrieving list of linked entities for a given entity title
        Linked Entities: Entities referenced inside the main entity
      operationId: links
      parameters:
      - description: title of the entity
        in: path
        name: title
        required: true
        type: string
      - collectionFormat: csv
        description: list of attributes to filter/ return all attributes if not provided
        in: query
        items:
          type: string
        name: attributes
        type: array
      - description: page number of results
        format: int32
        in: query
        name: page
        type: integer
      - description: maximum number of results to return
        format: int32
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: linked entity results
          schema:
            items:
              $ref: '#/definitions/SearchResult'
            type: array
        "400":
          description: input parameter validation error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: server error
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Get Linked Entities
      tags:
      - Entity
  /normalize:
    get:
      description: This API allows to normalize a given entity title
      operationId: normalize
      parameters:
      - description: text to be normalized
        in: query
        name: searchText
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: normalized text
          schema:
            type: object
        "400":
          description: input parameter validation error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: server error
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Normalize a given entity title
      tags:
      - Normalizer
  /normalize/location:
    get:
      description: This API allows to normalize a given location name
      operationId: normalize-location
      parameters:
      - description: text to be normalized
        in: query
        name: searchText
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: normalized text
          schema:
            type: object
        "400":
          description: input parameter validation error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: server error
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Normalize a given location name to return a standard location name
      tags:
      - Normalizer
  /normalize/name:
    get:
      description: This API allows to normalize a given entity title
      operationId: normalize-name
      parameters:
      - description: text to be normalized
        in: query
        name: searchText
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: normalized text
          schema:
            type: object
        "400":
          description: input parameter validation error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: server error
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Normalize a given entity title
      tags:
      - Normalizer
  /relations/{title}:
    get:
      description: |-
        This API allows retrieving list of related entities for a given entity title
        Related Entities: Entities where the main entity has been referred to
      operationId: relations
      parameters:
      - description: title of the entity
        in: path
        name: title
        required: true
        type: string
      - collectionFormat: csv
        description: list of attributes to filter/ return all attributes if not provided
        in: query
        items:
          type: string
        name: attributes
        type: array
      - description: page number of results
        format: int32
        in: query
        name: page
        type: integer
      - description: maximum number of results to return
        format: int32
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: linked entity results
          schema:
            items:
              $ref: '#/definitions/SearchResult'
            type: array
        "400":
          description: input parameter validation error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: server error
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Get Related Entities
      tags:
      - Entity
  /search:
    get:
      description: This API allows search by category and key word searching to retrieve
        list of entities
      operationId: search
      parameters:
      - description: search keywords
        in: query
        name: query
        type: string
      - collectionFormat: csv
        description: list of categories
        in: query
        items:
          type: string
        name: categories
        type: array
      - collectionFormat: csv
        description: list of attributes to filter/ return all attributes if not provided
        in: query
        items:
          type: string
        name: attributes
        type: array
      - description: page number of results
        format: int32
        in: query
        name: page
        type: integer
      - description: maximum number of results to return
        format: int32
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: search result
          schema:
            items:
              $ref: '#/definitions/SearchResult'
            type: array
        "400":
          description: input parameter validation error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: server error
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Search for entities by keywords and category
      tags:
      - Entity
  /terminate:
    post:
      description: |-
        This API allows to terminate the lifetime of an existing entity. Include entity title to terminate specific entity or include categories to terminate set of entities by category.
        source date and source attributes are required*.
      operationId: terminate
      parameters:
      - description: entity prototype
        in: body
        name: entity
        required: true
        schema:
          $ref: '#/definitions/SearchResult'
      produces:
      - application/json
      responses:
        "200":
          description: entity created/ modified
          schema:
            $ref: '#/definitions/SearchResult'
        "403":
          description: input validation error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: server error
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Terminate Entities
      tags:
      - Entity
  /upload:
    post:
      description: This API allows to upload a file to the server from a remote source
        url
      operationId: upload
      parameters:
      - description: upload object
        in: body
        name: upload
        required: true
        schema:
          $ref: '#/definitions/Upload'
      produces:
      - application/json
      responses:
        "200":
          description: file uploaded
          schema:
            type: string
        "403":
          description: input validation error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: server error
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Upload File
      tags:
      - File
produces:
- application/json
schemes:
- https
- http
swagger: "2.0"
